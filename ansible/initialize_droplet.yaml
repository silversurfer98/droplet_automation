---
- hosts: on_demand_droplets
  become: yes
  gather_facts: true
  tasks:
    - name: Include Encrypted Variables
      include_vars:
        file: secrets.yaml

    - name: Add a new user
      user:
        name: "{{ myuser }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        comment: "summa"
        password: "{{ '{{ pass }}' | password_hash('sha512') }}"
        shell: /bin/bash
        createhome: yes

    - name: Add the user to sudoers
      lineinfile:
        dest: /etc/sudoers
        line: "{{ myuser }} ALL=(ALL) NOPASSWD:ALL"
        validate: 'visudo -cf %s'

    # - name: Generate SSH Key
    #   become: yes
    #   become_user: "{{ myuser }}"
    #   command: ssh-keygen -t rsa -N "" -f ~/.ssh/id_rsa
    #   args:
    #     creates: ~/.ssh/id_rsa  # Skip the task if the key already exists

    - name: Copy authorized SSH key list from root
      ansible.builtin.shell: cp /root/.ssh/authorized_keys /home/"{{ myuser }}"/.ssh/authorized_keys

    - name: set permission for authorized SSH key list
      ansible.builtin.file:
        path: /home/{{ myuser }}/.ssh/authorized_keys
        owner: "{{ myuser }}"
        group: "{{ myuser }}"
        mode: '0644'
    
    - name: harden SSH 1
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^#?AuthenticationMethods' 
        line: 'AuthenticationMethods publickey'
    - name: harden SSH 2
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^#?PasswordAuthentication' 
        line: 'PasswordAuthentication no'
    - name: harden SSH 3
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^#?ChallengeResponseAuthentication' 
        line: 'ChallengeResponseAuthentication no'
    - name: harden SSH 4
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^#?PubkeyAuthentication' 
        line: 'PubkeyAuthentication yes'
    - name: Use PAM SSH
      lineinfile: 
        dest: /etc/ssh/sshd_config 
        regexp: '^#?UsePAM' 
        line: 'UsePAM yes'

  # if you are using this root login will cut off so to run other play books use --ask-become-pass
  # so that the raghav can install packages
  
    # - name: harden SSH 5
    #   lineinfile: 
    #     dest: /etc/ssh/sshd_config 
    #     regexp: '^PermitRootLogin' 
    #     line: 'PermitRootLogin No'

    - name: Create login_notifier
      file:
        path: /home/{{ myuser }}/login_notifier
        state: touch
        mode: '0755'
        owner: "{{ myuser }}"
        group: "{{ myuser }}"
      become_user: "{{ myuser }}"
      become: yes

    - name: Write content to the file
      lineinfile:
        path: /home/{{ myuser }}/login_notifier
        line: "{{ item }}"
        # create: yes
      loop:
        - "#!/bin/bash"
        - "WEBHOOK_URL={{ discord_hook }}"
        - "HOSTNAME=$(hostname -f)"
        - "DATE=\"$(date +\"%d.%b.%Y -- %H:%M\")\""
        - "MESSAGE=\"**$PAM_USER** did action: '**$PAM_TYPE**' at _$DATE on __$HOSTNAME from IP: \\`$PAM_RHOST\\`\""
        - "data='{\"content\":\"'\"${MESSAGE}\"'\",\"tts\":false}'"
        - "curl -X POST \"$WEBHOOK_URL\" -H \"Content-Type:application/json\" --data \"$data\""
      become_user: "{{ myuser }}"
      become: yes

    - name: add login_notifier to PAM file
      lineinfile:
        path: /etc/pam.d/sshd
        insertafter: "EOF"
        line: "session  optional  pam_exec.so  /home/{{ myuser }}/login_notifier"
      # become_user: root
      # become: yes
    


    # - name: Add docker to user grp
    #   ansible.builtin.shell: usermod -aG docker "{{ myuser }}"